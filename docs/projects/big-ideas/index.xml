<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Big Ideas on Andy Bulka</title>
    <link>https://abulka.github.io/projects/big-ideas/</link>
    <description>Recent content in Big Ideas on Andy Bulka</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://abulka.github.io/projects/big-ideas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Literate Code Mapping</title>
      <link>https://abulka.github.io/projects/big-ideas/lcodemaps/</link>
      <pubDate>Mon, 23 Nov 2020 12:43:14 +1100</pubDate>
      <guid>https://abulka.github.io/projects/big-ideas/lcodemaps/</guid>
      <description>Diagramming Methodology Specification&#xA;Literate Code Maps are diagrams which help programmers understand the structure and behaviour of source code.&#xA;Example Code Map diagrams differ from UML diagrams in that they focus on real source code fragments and lots of rich-text formatted story-telling narrative. They combine class and sequence diagrams into the same diagram, offering step by step numbering to follow the behaviour of a use case story.&#xA;The 5 laws of literate code mapping Boxes represent any scope or namespace - be creative Show structure and behaviour in the same diagram Code compartments in boxes contain code fragments and richly formatted narrative Lines representing function calls between boxes are numbered to tell a story Cross reference numbers can appear anywhere to associate ideas Think of literate code maps like UML class diagrams where the classes are now boxes which can represent more things, and lines represent function calls as well as structure.</description>
    </item>
    <item>
      <title>Medium Articles</title>
      <link>https://abulka.github.io/projects/big-ideas/medium-articles/</link>
      <pubDate>Sat, 23 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://abulka.github.io/projects/big-ideas/medium-articles/</guid>
      <description>I&amp;rsquo;ve been publishing a lot on Medium recently. Why? Because the articles seems to get more widely read, and the Medium editor is so simple and produces beautifully formatted articles.&#xA;Building a deployable Python-Electron App&#xA;Building a normal, deployable application for Mac or Windows, using Python 3 is hard. There is nothing like Visual Studio or Delphi (remember that?) for Python where you can drag and drop to design a GUI, press a button and get an .</description>
    </item>
  </channel>
</rss>
